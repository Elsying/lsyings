{"remainingRequest":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\src\\main.js","dependencies":[{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\src\\main.js","mtime":1609569561000},{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"C:\\\\Users\\\\r7000\\\\Desktop\\\\pagepro\\\\lsying\\\\node_modules\\\\core-js\\\\modules\\\\es6.array.iterator.js\";\nimport \"C:\\\\Users\\\\r7000\\\\Desktop\\\\pagepro\\\\lsying\\\\node_modules\\\\core-js\\\\modules\\\\es6.promise.js\";\nimport \"C:\\\\Users\\\\r7000\\\\Desktop\\\\pagepro\\\\lsying\\\\node_modules\\\\core-js\\\\modules\\\\es6.object.assign.js\";\nimport \"C:\\\\Users\\\\r7000\\\\Desktop\\\\pagepro\\\\lsying\\\\node_modules\\\\core-js\\\\modules\\\\es7.promise.finally.js\";\nimport Vue from 'vue';\nimport Cookies from 'js-cookie';\nimport 'normalize.css/normalize.css'; // a modern alternative to CSS resets\n\nimport Element from 'element-ui';\nimport \"./styles/element-variables.scss\";\nimport '@/styles/index.scss'; // global css\n\nimport App from \"./App\";\nimport store from \"./store\";\nimport router from \"./router\";\nimport \"./icons\"; // icon\n\nimport \"./permission\"; // permission control\n\nimport \"./utils/error-log\"; // error log\n\nimport * as filters from \"./filters\"; // global filters\n\n/**\n * If you don't want to use mock-server\n * you want to use MockJs for mock api\n * you can execute: mockXHR()\n *\n * Currently MockJs will be used in the production environment,\n * please remove it before going online ! ! !\n */\n// if (process.env.NODE_ENV === 'production') {\n//\n// }\n\nVue.use(Element, {\n  size: Cookies.get('size') || 'medium' // set element-ui default size\n\n}); // register global utility filters\n\nObject.keys(filters).forEach(function (key) {\n  Vue.filter(key, filters[key]);\n});\nVue.config.productionTip = false;\nnew Vue({\n  el: '#app',\n  router: router,\n  store: store,\n  render: function render(h) {\n    return h(App);\n  }\n});",null]}