{"remainingRequest":"D:\\Desktop\\pagepro\\lsying\\node_modules\\thread-loader\\dist\\cjs.js!D:\\Desktop\\pagepro\\lsying\\node_modules\\babel-loader\\lib\\index.js!D:\\Desktop\\pagepro\\lsying\\src\\router\\index.js","dependencies":[{"path":"D:\\Desktop\\pagepro\\lsying\\src\\router\\index.js","mtime":1609569561000},{"path":"D:\\Desktop\\pagepro\\lsying\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\pagepro\\lsying\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Desktop\\pagepro\\lsying\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Router from 'vue-router';\nVue.use(Router);\n/* Layout */\n\nimport Layout from '@/layout';\n/* Router Modules */\n\n/**\n * Note: sub-menu only appear when route children.length >= 1\n * Detail see: https://panjiachen.github.io/vue-element-admin-site/guide/essentials/router-and-nav.html\n *\n * hidden: true                   if set true, item will not show in the sidebar(default is false)\n * alwaysShow: true               if set true, will always show the root menu\n *                                if not set alwaysShow, when item has more than one children route,\n *                                it will becomes nested mode, otherwise not show the root menu\n * redirect: noRedirect           if set noRedirect will no redirect in the breadcrumb\n * name:'router-name'             the name is used by <keep-alive> (must set!!!)\n * meta : {\n    roles: ['admin','editor']    control the page roles (you can set multiple roles)\n    title: 'title'               the name show in sidebar and breadcrumb (recommend set)\n    icon: 'svg-name'             the icon show in the sidebar\n    noCache: true                if set true, the page will no be cached(default is false)\n    affix: true                  if set true, the tag will affix in the tags-view\n    breadcrumb: false            if set false, the item will hidden in breadcrumb(default is true)\n    activeMenu: '/example/list'  if set path, the sidebar will highlight the path you set\n  }\n */\n\n/**\n * constantRoutes\n * a base page that does not have permission requirements\n * all roles can be accessed\n */\n\nexport var constantRoutes = [{\n  path: '/redirect',\n  component: Layout,\n  hidden: true,\n  children: [{\n    path: '/redirect/:path(.*)',\n    component: function component() {\n      return import('@/views/redirect/index');\n    }\n  }]\n}, {\n  path: '/login',\n  component: function component() {\n    return import('@/views/login/index');\n  },\n  hidden: true\n}, {\n  path: '/auth-redirect',\n  component: function component() {\n    return import('@/views/login/auth-redirect');\n  },\n  hidden: true\n}, {\n  path: '/404',\n  component: function component() {\n    return import('@/views/error-page/404');\n  },\n  hidden: true\n}, {\n  path: '/401',\n  component: function component() {\n    return import('@/views/error-page/401');\n  },\n  hidden: true\n}, {\n  path: '/',\n  component: Layout,\n  redirect: '/home',\n  children: [{\n    path: 'home',\n    component: function component() {\n      return import('@/views/dashboard/index');\n    },\n    name: 'Home',\n    meta: {\n      title: '首页',\n      icon: 'dashboard',\n      affix: true\n    }\n  }]\n}, // {\n//   path: '/documentation',\n//   component: Layout,\n//   children: [\n//     {\n//       path: 'index',\n//       component: () => import('@/views/documentation/index'),\n//       name: 'Documentation',\n//       meta: { title: '文档', icon: 'documentation', affix: true }\n//     }\n//   ]\n// },\n// {\n//   path: 'swagger',\n//   component: Layout,\n//   children: [\n//     {\n//       path: 'http://47.105.159.10:8888/api/swagger-ui.html',\n//       meta: { title: 'SwaggerUI', icon: 'link' }\n//     }\n//   ]\n// },\n// {\n//   path: 'knife4j',\n//   component: Layout,\n//   children: [\n//     {\n//       // path: 'http://localhost:8888/api/doc.html',\n//       path: 'http://116.62.196.62:8888/api/doc.html',\n//       meta: { title: 'knife4j', icon: 'link' }\n//     }\n//   ]\n// },\n// {\n//   path: 'spring-boot-admin',\n//   component: Layout,\n//   children: [\n//     {\n//       path: 'http://47.105.159.10:8000/instances/58c15acdd00c/details',\n//       meta: { title: 'SpringBootAdmin', icon: 'link' }\n//     }\n//   ]\n// },\n{\n  path: '/profile',\n  component: Layout,\n  redirect: '/profile/index',\n  hidden: true,\n  children: [{\n    path: 'index',\n    component: function component() {\n      return import('@/views/profile/index');\n    },\n    name: 'Profile',\n    meta: {\n      title: 'Profile',\n      icon: 'user',\n      noCache: true\n    }\n  }]\n}];\n/**\n * asyncRoutes\n * the routes that need to be dynamically loaded based on user roles\n */\n\nexport var asyncRoutes = [\n/** when your routing map is too long, you can split it into small modules **/\n{\n  path: '/system',\n  component: Layout,\n  redirect: '/system/list',\n  name: 'system',\n  meta: {\n    title: '系统管理',\n    icon: 'user'\n  },\n  children: [{\n    path: 'sys-user-list',\n    component: function component() {\n      return import('@/views/system/sys-user/sys-user-list');\n    },\n    name: 'sysUserList',\n    meta: {\n      title: '用户管理',\n      icon: 'edit'\n    }\n  }, {\n    path: 'sys-role-list',\n    component: function component() {\n      return import('@/views/system/sys-role/sys-role-list');\n    },\n    name: 'sysRoleList',\n    meta: {\n      title: '角色管理',\n      icon: 'edit'\n    }\n  }, {\n    path: 'sys-menu-list',\n    component: function component() {\n      return import('@/views/system/sys-menu/sys-menu-list');\n    },\n    name: 'sysMenuList',\n    meta: {\n      title: '菜单管理',\n      icon: 'edit'\n    }\n  }, {\n    path: 'sys-role-menu/:id(\\\\d+)',\n    component: function component() {\n      return import('@/views/system/sys-role/sys-role-menu');\n    },\n    name: 'sysRoleMenu',\n    meta: {\n      title: '角色权限设置',\n      noCache: true,\n      activeMenu: '/system/sys-role-list'\n    },\n    hidden: true\n  } // {\n  //   path: 'sys-department',\n  //   component: () => import('@/views/system/sys-user/sys-user-list'),\n  //   name: 'sysUserList',\n  //   meta: { title: '部门管理', icon: 'edit' }\n  // }\n  ]\n}, {\n  path: '/device',\n  component: Layout,\n  redirect: '/device/list',\n  name: 'device',\n  meta: {\n    title: '设备管理',\n    icon: 'seting'\n  },\n  children: [{\n    path: 'device-list',\n    component: function component() {\n      return import('@/views/device/list/index');\n    },\n    name: 'deviceList',\n    meta: {\n      title: '设备管理',\n      icon: 'edit'\n    }\n  }]\n}, {\n  path: '/deviceoperate',\n  component: Layout,\n  redirect: '/deviceoperate/list',\n  name: 'deviceoperate',\n  meta: {\n    title: '商品管理',\n    icon: 'seting'\n  },\n  children: [{\n    path: 'deviceoperate-list',\n    component: function component() {\n      return import('@/views/deviceoperate/list/index');\n    },\n    name: 'deviceoperateList',\n    meta: {\n      title: '商品管理',\n      icon: 'edit'\n    }\n  }]\n}, // 404 page must be placed at the end !!!\n{\n  path: '*',\n  redirect: '/404',\n  hidden: true\n}];\n\nvar createRouter = function createRouter() {\n  return new Router({\n    // mode: 'history', // require service support\n    scrollBehavior: function scrollBehavior() {\n      return {\n        y: 0\n      };\n    },\n    routes: constantRoutes\n  });\n};\n\nvar router = createRouter(); // Detail see: https://github.com/vuejs/vue-router/issues/1234#issuecomment-357941465\n\nexport function resetRouter() {\n  var newRouter = createRouter();\n  router.matcher = newRouter.matcher; // reset router\n}\nexport default router;",null]}