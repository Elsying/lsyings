{"remainingRequest":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\src\\views\\system\\sys-user\\components\\sys-user-password.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\src\\views\\system\\sys-user\\components\\sys-user-password.vue","mtime":1609569561000},{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport sysUserApi from '@/api/system/sys-user-api'\n\nexport default {\n  name: 'SysUserPassword',\n  data() {\n    const validPassword = (rule, value, callback) => {\n      const reg = /^[0-9a-zA-Z_]{6,16}$/\n      if (!reg.test(value)) {\n        callback(new Error('密码只能输入字母数字下划线'))\n      } else {\n        callback()\n      }\n    };\n    const validConfirmPassword = (rule, value, callback) => {\n      if (this.form.newPassword !== value) {\n        callback(new Error('两次输入的密码不一致'))\n      } else {\n        callback()\n      }\n    };\n\n    return {\n      dialogVisible: false,\n      form: {\n        newPassword: null,\n        confirmPassword: null\n      },\n      updateId: null,\n      rules: {\n        newPassword: [\n          { required: true, message: '请输入新密码', trigger: 'blur' },\n          { min: 6, max: 16, message: '长度在 6 到 16 个字符', trigger: 'blur' },\n          { validator: validPassword, trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, message: '请输入确认新密码', trigger: 'blur' },\n          { min: 6, max: 16, message: '长度在 6 到 16 个字符', trigger: 'blur' },\n          { validator: validPassword, trigger: 'blur' },\n          { validator: validConfirmPassword, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  computed: {},\n  created() {\n\n  },\n  methods: {\n    handle(id) {\n      this.updateId = id;\n      this.dialogVisible = true\n    },\n    submitForm() {\n      this.$refs.sysUserPasswordForm.validate((valid) => {\n        if (valid) {\n          console.log('submit!')\n          this.resetPassword()\n        } else {\n          console.log('error submit!!')\n          return false\n        }\n      });\n    },\n    resetPassword() {\n      const updateParam = {\n        userId: this.updateId,\n        newPassword: this.form.newPassword,\n        confirmPassword: this.form.confirmPassword\n      }\n      sysUserApi.resetPassword(updateParam).then(response => {\n        if (response.code === 200) {\n          this.restForm();\n          this.$message({\n            message: '重置密码成功',\n            type: 'success'\n          })\n        }\n      })\n    },\n    restForm() {\n      this.$refs.sysUserPasswordForm.resetFields()\n      this.dialogVisible = false\n    }\n  }\n}\n",null]}