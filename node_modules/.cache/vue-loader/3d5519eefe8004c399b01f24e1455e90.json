{"remainingRequest":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\src\\views\\deviceoperate\\list\\components\\dialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\src\\views\\deviceoperate\\list\\components\\dialog.vue","mtime":1609980891029},{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport productApi from \"@/api/product/product-api\";\nimport UserDialog from \"./userDialog\";\n\nimport axios from \"axios\";\n\nexport default {\n  name: \"DeviceDialog\",\n  components: {\n    UserDialog\n  },\n  props: {\n    // detail: 详细页面，add: 添加页面，update：编辑页面\n    isDetail: {\n      type: Boolean,\n      default: false\n    },\n    isAdd: {\n      type: Boolean,\n      default: false\n    },\n    isUpdate: {\n      type: Boolean,\n      default: false\n    },\n    isCopy: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      dialogTitle: null,\n      form: {\n        id: 0,\n        did: 0,\n        name: \"\",\n        code: \"\",\n        price: \"\",\n        firstCategory: \"\",\n        secondaryCategory: \"\",\n        threeCategory: \"\",\n        brand: \"\",\n        address: \"\",\n        deliveryMethod: \"\",\n        freightPayer: \"\",\n        deliveryDate: \"\",\n        onstate: \"\",\n        shelfStatus: 0,\n        piclist: \"\",\n        description: \"\",\n        createTime: \"\",\n        updateTime: \"\",\n        deleted: 0,\n        commoditynum: 0,\n        upend: '30',\n        upstart: '10',\n        leftend: '30',\n        leftstart: '10'\n      },\n      updateId: null,\n      rules: {\n        name: [\n          { required: true, message: \"请输入商品名称\", trigger: \"blur\" }\n          // { min: 4, max: 16, message: '长度在 2 到 10 个字符', trigger: 'blur' }\n        ],\n        state: [\n          { required: true, message: '请选择随机字符', trigger: 'change' }\n        ],\n        shelfStatus: [\n          { required: true, message: '请选择上下架状态', trigger: 'change' }\n        ],\n        price: [\n          { required: true, message: '请输入价格', trigger: 'change' }\n        ],\n        firstCategory: [\n          { required: true, message: '请输入一级类目', trigger: 'change' }\n        ],\n        secondaryCategory: [\n          { required: true, message: '请输入二级类目', trigger: 'change' }\n        ],\n        threeCategory: [\n          { required: true, message: '请输入三级类目', trigger: 'change' }\n        ],\n        // brand: [\n        //   { required: true, message: '请输入品牌', trigger: 'change' }\n        // ],\n        address: [\n          { required: true, message: '请输入发货地址', trigger: 'change' }\n        ],\n        deliveryMethod: [\n          { required: true, message: '请选择发货方式', trigger: 'change' }\n        ],\n        freightPayer: [\n          { required: true, message: '请选择运费承担人', trigger: 'change' }\n        ],\n        deliveryDate: [\n          { required: true, message: '请选择发货日期', trigger: 'change' }\n        ],\n        onstate: [\n          { required: true, message: '请选择新旧程度', trigger: 'change' }\n        ],\n        description: [\n          { required: true, message: '请输入商品描述', trigger: 'change' }\n        ],\n        leftstart: [\n          { required: true, message: '请输入距左侧随机数开始', trigger: 'change' }\n        ],\n        leftend: [\n          { required: true, message: '请输入距左侧随机数结束', trigger: 'change' }\n        ],\n        upstart: [\n          { required: true, message: '请输入距上侧随机数开始', trigger: 'change' }\n        ],\n        upend: [\n          { required: true, message: '请输入距上侧随机数结束', trigger: 'change' }\n        ],\n        piclist: [\n          { required: true, message: '请上传图片', trigger: 'change' }\n        ]\n      },\n      addressList: [\n        { value: 1, label: \"東京都\" },\n        { value: 2, label: \"埼玉県\" },\n        { value: 3, label: \"千葉県\" },\n        { value: 4, label: \"神奈川県\" },\n        { value: 5, label: \"群馬県\" },\n        { value: 6, label: \"大阪府\" },\n        { value: 7, label: \"未定\" }\n      ],\n      // img\n      fileList: [],\n      formData: {},\n      origin: window.location.protocol + \"//\" + window.location.hostname + ':8888',\n      // 拖拽\n      dragObj: { index: 0, item: {}},\n      dropObj: { index: 0, item: {}},\n      // 目录list\n      firstCategoryList: [],\n      secondaryCategoryList: [],\n      threeCategoryList: []\n    };\n  },\n  computed: {},\n  created() {},\n  methods: {\n    handle(id) {\n      this.flushCategoryList()\n      // alert(111)\n      if (this.isDetail) {\n        console.log(\"detail...\" + id);\n        this.rules = null;\n        this.dialogTitle = \"商品详情\";\n        this.getRoleDetail(id);\n      } else if (this.isAdd) {\n        console.log(\"add...\");\n        this.dialogTitle = \"新增商品\";\n      } else if (this.isUpdate) {\n        console.log(\"update...\");\n        this.dialogTitle = \"修改商品\";\n        this.updateId = id;\n        this.getRoleDetail(id);\n      } else if (this.isCopy) {\n        console.log(\"copy...\");\n        this.dialogTitle = \"修改商品\";\n        this.updateId = id;\n        this.getRoleDetail(id);\n      }\n      this.dialogVisible = true;\n    },\n    submitAddForm() {\n      this.$refs.DeviceDialogForm.validate((valid) => {\n        if (Number(this.form.leftstart) > Number(this.form.leftend) || Number(this.form.upstart) > Number(this.form.upend)) {\n          this.$message({\n            type: 'error',\n            message: `添加失败，截图范围开始数必须大于结束数`\n          });\n          return\n        }\n        if (this.form.name.length > 37) {\n          this.$message({\n            type: 'error',\n            message: `修改失败，商品名超出字数`\n          });\n          return\n        }\n        if (this.form.description.length > 1000) {\n          this.$message({\n            type: 'error',\n            message: `修改失败，商品描述超出字数`\n          });\n          return\n        }\n        if (valid) {\n          console.log(\"submit!\");\n          this.addRole();\n          // this.$emit(\"getList\")\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    submitUpdateForm() {\n      this.$refs.DeviceDialogForm.validate((valid) => {\n        if (Number(this.form.leftstart) > Number(this.form.leftend) || Number(this.form.upstart) > Number(this.form.upend)) {\n          this.$message({\n            type: 'error',\n            message: `修改失败，截图范围开始数必须大于结束数`\n          });\n          return\n        }\n        if (this.form.name.length > 37) {\n          this.$message({\n            type: 'error',\n            message: `修改失败，商品名超出字数`\n          });\n          return\n        }\n        if (this.form.description.length > 1000) {\n          this.$message({\n            type: 'error',\n            message: `修改失败，商品描述超出字数`\n          });\n          return\n        }\n        if (valid) {\n          console.log(\"submit!\");\n          this.updateRole();\n          // this.$emit(\"getList\")\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    submitCopyForm() {\n      this.$refs.DeviceDialogForm.validate((valid) => {\n        if (valid) {\n          const tempForm = JSON.parse(JSON.stringify(this.form))\n          this.$emit(\"copy\", tempForm)\n          this.restForm()\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    getRoleDetail(id) {\n      productApi.detail(id).then((response) => {\n        if (response.code === 200) {\n          this.form = response.data;\n          // this.$set(this.form, 'upend', 30)\n          // this.$set(this.form, 'upstart', 10)\n          // this.$set(this.form, 'leftend', 30)\n          // this.$set(this.form, 'leftstart', 10)\n          if (this.form.piclist) {\n            this.fileList = this.form.piclist.split(';')\n          }\n        }\n      });\n    },\n    addRole() {\n      this.form.deviceId = this.$parent.deviceId;\n      this.form.did = this.$parent.deviceId;\n      const addParam = this.form;\n      productApi.add(addParam).then((response) => {\n        if (response.code === 200) {\n          this.saveCategory();\n          this.restForm();\n          this.$message({\n            message: \"保存商品成功\",\n            type: \"success\"\n          });\n          this.$emit(\"change\");\n        }\n      });\n    },\n    updateRole() {\n      productApi.update(this.form).then((response) => {\n        if (response.code === 200) {\n          this.saveCategory();\n          this.restForm();\n          this.$message({\n            message: \"修改商品成功\",\n            type: \"success\"\n          });\n          this.$emit(\"change\");\n        }\n      });\n    },\n    restForm() {\n      this.$refs.DeviceDialogForm.resetFields();\n      this.dialogVisible = false;\n    },\n    handOpenUserDialog() {\n      this.$nextTick(() => {\n        this.$refs.userDialog.handle();\n      });\n    },\n    handleSave(row) {},\n    // handle随机字符串\n    handleRamdenChange(v) {\n      function randomString(e) {\n        e = e || 2;\n        var t = \"ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678!@#$%^&*<>/*-+()=~.;|[]{}\";\n        var a = t.length;\n        var n = \"\";\n        for (var i = 0; i < e; i++) n += t.charAt(Math.floor(Math.random() * a));\n        return n\n      }\n      if (v === 1) {\n        do {\n          var rstr = randomString(2)\n        } while (!isNaN(rstr));\n        this.form.name = rstr + this.form.name;\n      }\n      if (v === 2) {\n        do {\n          var rstrs = randomString(2)\n        } while (!isNaN(rstrs));\n        this.form.name = this.form.name + rstrs;\n      }\n      // if (v === 3) {\n      //   this.form.name = \"\";\n      // }\n    },\n    // 上传图片成功\n    // on-change：文件状态改变时的钩子，添加文件、上传成功和上传失败时都会被调用\n    fileChange(file, fileList) {\n      this.fileList = fileList;\n      const existFile = fileList\n        .slice(0, fileList.length - 1)\n        .find((f) => f.name === file.name); // 如果文件名重复\n      if (existFile) {\n        this.$message.error(\"当前文件已经存在!\");\n        fileList.pop();\n      }\n    },\n    // on-remove：文件列表移除文件时的钩子\n    removeFile(file, fileList) {\n      this.fileList = fileList; // 此处fileList为删除文件后，剩余的文件\n    },\n    // 保存上传\n    saveFile() {\n      if (Number(this.form.leftstart) > Number(this.form.leftend) || Number(this.form.upstart) > Number(this.form.upend)) {\n        this.$message({\n          type: 'error',\n          message: `上传失败，开始数必须大于结束数`\n        });\n        return\n      }\n      const { uploadFiles } = this.$refs.upload;\n      const formData = new FormData();\n      formData.append(\"token\", JSON.parse(sessionStorage.userInfo).token);\n      formData.append(\"deviceid\", this.$parent.deviceId);\n      formData.append(\"did\", this.$parent.deviceId);\n      formData.append(\"leftend\", this.form.leftend);\n      formData.append(\"leftstart\", this.form.leftstart);\n      formData.append(\"upend\", this.form.upend);\n      formData.append(\"upstart\", this.form.upstart);\n      uploadFiles.forEach((item) => {\n        formData.append(\"files\", item.raw);\n      });\n      // 此时所有的钩子已经执行完了fileData 中存的是通过校验的数据\n      productApi\n        .upload(formData)\n        .then((res) => {\n          const temp = res.data.data.map((item) => {\n            return item.split(\"/resource/\")[1];\n          });\n          this.form.piclist = temp.join(\";\");\n        })\n        .catch((err) => {\n          console.log(err, \"---------\");\n        });\n      // this.subFile(formData).then(res => {\n      //   // this.diaFile = false\n      //   // -----可写保存成功后执行的操作，此处省略\n      //   this.fileList = []// 清空\n      // }).catch((res) => {\n      // // -----可写保存失败后执行的操作，此处省略\n      //   // this.diaFile = false\n      // })\n    },\n    // 取消\n    cancelUploadFile() {\n      // this.diaFile = false//关闭弹窗\n      this.importList = {\n        // 清空表单其他项\n        sysName: \"\", // 系统名称\n        resName: \"\", // 资源名称\n        resItemName: \"\", // 资源项名称\n        fileList: \"\" // 文件名列表\n      };\n      this.fileList = [];\n    },\n    subFile(data) {\n      return axios({\n        // todo 换成相对ip地址\n        url: \"http://116.62.196.62:8888/api/commodity/upload\",\n        method: \"post\",\n        data,\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      });\n    },\n    // 删除图片\n    handleDeleteImg(item, index) {\n      this.fileList.splice(index, 1);\n      const arr = this.form.piclist.split(';')\n      arr.splice(index, 1)\n      this.form.piclist = arr.join(';')\n      // this.form.piclist.split(';').splice(index, 1).join(';')\n      // this.form.piclist = this.fileList.join(\";\");\n    },\n    // 拖拽\n    handleDragStart($event, index, item) {\n      this.dragObj = { index, item }\n    },\n    handleDragOver($event, index, item) {\n      $event.preventDefault();\n      // console.log('handleDragOver', $event, index, item)\n    },\n    handleDrop($event, index, item) {\n      this.dropObj = { index, item }\n\n      const arr = this.form.piclist.split(';')\n      arr[this.dragObj.index] = this.dropObj.item\n      arr[this.dropObj.index] = this.dragObj.item\n      this.form.piclist = arr.join(';')\n    },\n    // 三级目录缓存功能\n    saveCategory() {\n      // 1\n      if (!localStorage.firstCategoryList) {\n          localStorage.firstCategoryList = []\n      }\n\n      const arr1 = localStorage.firstCategoryList.split(',')\n      arr1.push(this.form.firstCategory)\n      localStorage.firstCategoryList = Array.from(new Set(arr1))\n      // 2\n      if (!localStorage.secondaryCategoryList) {\n          localStorage.secondaryCategoryList = []\n      }\n      const arr2 = localStorage.secondaryCategoryList.split(',')\n      arr2.push(this.form.secondaryCategory)\n      localStorage.secondaryCategoryList = Array.from(new Set(arr2))\n      console.log(arr2)\n      // 3\n      if (!localStorage.threeCategoryList) {\n          localStorage.threeCategoryList = []\n      }\n      const arr3 = localStorage.threeCategoryList.split(',')\n      arr3.push(this.form.threeCategory)\n      localStorage.threeCategoryList = Array.from(new Set(arr3))\n      console.log(arr3)\n    },\n    // 清空三级目录缓存\n    clearCategory(category) {\n      localStorage.removeItem(category)\n      this.flushCategoryList()\n      this.$message.success('缓存清除成功')\n    },\n    // 刷新三级List\n    flushCategoryList() {\n      if (localStorage.firstCategoryList) {\n        this.firstCategoryList = localStorage.firstCategoryList.split(',').filter(item => {\n          if (item) return item\n        })\n      } else {\n        this.firstCategoryList =  []\n      }\n      if (localStorage.secondaryCategoryList) {\n        this.secondaryCategoryList = localStorage.secondaryCategoryList.split(',').filter(item => {\n          if (item) return item\n        })\n      } else {\n        this.secondaryCategoryList =  []\n      }\n      if (localStorage.threeCategoryList) {\n        this.threeCategoryList = localStorage.threeCategoryList.split(',').filter(item => {\n          if (item) return item\n        })\n      } else {\n        this.threeCategoryList =  []\n      }\n    }\n  }\n};\n",null]}