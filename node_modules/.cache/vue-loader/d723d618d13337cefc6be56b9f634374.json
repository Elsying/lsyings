{"remainingRequest":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\src\\views\\deviceoperate\\list\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\src\\views\\deviceoperate\\list\\index.vue","mtime":1609569561000},{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport waves from \"@/directive/waves\";\nimport Pagination from \"@/components/Pagination\";\n\nimport DeviceDialog from \"./components/dialog\";\n\nimport deviceApi from \"@/api/device/device-list-api\";\nimport productApi from \"@/api/product/product-api\";\nconst stateEnum = { 0: \"已下架\", 1: \"已上架\" };\nconst stateClassEnum = { 0: \"danger\", 1: \"success\" };\n\nexport default {\n  name: \"DeviceList\",\n  components: { DeviceDialog, Pagination },\n  directives: { waves },\n  filters: {\n    statusFilter(status) {\n      if (status === 0) {\n        return \"info\";\n      } else if (status === 1) {\n        return \"success\";\n      } else if (status === 2) {\n        return \"warning\";\n      }\n    },\n    stateClassFilter(state) {\n      return stateClassEnum[state];\n    },\n    stateFilter(state) {\n      return stateEnum[state];\n    }\n  },\n  data() {\n    return {\n      tableKey: 0,\n      list: null,\n      deviceList: null, // 设备列表\n      total: 0,\n      listLoading: false,\n      sortColumn: \"id\",\n      sortAsc: false,\n      listQuery: {\n        pageIndex: 1,\n        pageSize: 10,\n        keyword: null,\n        name: null,\n        code: null,\n        state: null,\n        pageSorts: []\n      },\n      stateOptions: [\n        { label: \"已删除\", value: 1 },\n        { label: \"未删除\", value: 0 }\n      ],\n      tableColumnChecked: null,\n      searchColumn: \"keyword\",\n      searchValue: null,\n      searchOptions: [\n        { label: \"全部\", value: \"keyword\" },\n        { label: \"角色名称\", value: \"name\" },\n        { label: \"角色编码\", value: \"code\" }\n      ],\n      createTimeRange: null,\n      showReviewer: true,\n      dialogStatus: \"\",\n      textMap: {\n        update: \"Edit\",\n        create: \"Create\"\n      },\n      dialogPvVisible: false,\n      pvData: [],\n      downloadLoading: false,\n      deviceId: \"\", // 设备id\n      copyObj: {}, // 拷贝对象\n      origin:\n        window.location.protocol + \"//\" + window.location.hostname + \":8888\",\n      // 获取所有商品\n      isGetAllList: false,\n\n      // device tag\n      tags: [],\n      selectTag: {}\n    };\n  },\n  created() {\n    this.setDefaultSort();\n    // this.getPageListBydid();\n    this.getDeviceList();\n    this.isGetAllList = JSON.parse(\n      sessionStorage.userInfo\n    ).loginSysUserVo.permissionCodes.includes(\"admin:commodity:page\");\n  },\n  methods: {\n    getList() {\n      this.deviceId = \"\";\n      this.listLoading = true;\n      productApi.getPageList(this.listQuery).then((response) => {\n        this.list = response.data.records;\n        this.total = response.data.total;\n        this.listLoading = false;\n      });\n    },\n    getPageListBydid(deviceId) {\n      if (!deviceId) {\n        this.$message.warning(\"请选择设备后在操作\");\n        return;\n      }\n      this.listLoading = true;\n      productApi.getPageListBydid(this.listQuery, deviceId).then((response) => {\n        this.list = response.data.records;\n        this.total = response.data.total;\n        this.listLoading = false;\n      });\n    },\n    getDeviceList(str) {\n      const listQuery = {\n        pageIndex: 1,\n        pageSize: 999,\n        keyword: str,\n        name: str,\n        code: null,\n        state: null,\n        pageSorts: []\n      };\n      const isAdmin = JSON.parse(\n        sessionStorage.userInfo\n      ).loginSysUserVo.permissionCodes.includes(\"admin:device:page\");\n      deviceApi.getPageList(listQuery, isAdmin).then((response) => {\n        this.deviceList = response.data.records;\n      });\n    },\n    handleFilter() {\n      this.listQuery.pageIndex = 1;\n      this.listQuery.keyword = null;\n      this.listQuery.name = null;\n      this.listQuery.code = null;\n      this.listQuery[this.searchColumn] = this.searchValue;\n      this.getPageListBydid(this.deviceId);\n    },\n    setDefaultSort() {\n      // 设置默认排序\n      this.listQuery.pageSorts = [\n        {\n          column: this.sortColumn,\n          asc: this.sortAsc\n        }\n      ];\n    },\n    sortChange(data) {\n      const { prop, order } = data;\n      if (prop === \"createTime\") {\n        this.sortColumn = \"create_time\";\n      } else {\n        this.sortColumn = prop;\n      }\n      this.sortAsc = order === \"ascending\";\n      this.listQuery.pageSorts = [\n        {\n          column: this.sortColumn,\n          asc: this.sortAsc\n        }\n      ];\n      this.handleFilter();\n    },\n    getSortClass: function(key) {\n      if (this.sortColumn === key) {\n        return this.sortAsc ? \"ascending\" : \"descending\";\n      } else {\n        return \"\";\n      }\n    },\n    handleAdd() {\n      this.dialogStatus = \"create\";\n      this.$nextTick(() => {\n        this.$refs.addPage.handle();\n      });\n    },\n    handDetail(id) {\n      this.$nextTick(() => {\n        this.$refs.detailPage.handle(id);\n      });\n    },\n    handUpdate(id) {\n      this.$nextTick(() => {\n        this.$refs.updatePage.handle(id);\n      });\n    },\n    handCopy(id) {\n      this.$nextTick(() => {\n        this.$refs.copyPage.handle(id);\n      });\n    },\n    handleDelete(id, name) {\n      this.$confirm(\"您确定要删除 \" + name + \" ?\", \"删除提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        productApi.delete(id).then((response) => {\n          if (response.code === 200) {\n            this.$message({\n              type: \"success\",\n              message: \"删除成功!\"\n            });\n            this.handleFilter();\n          }\n        });\n      });\n    },\n    // 选择设备\n    handleDeviceChange(deviceId) {\n      if (deviceId) {\n        // get product\n        this.deviceId = deviceId;\n        this.getPageListBydid(deviceId);\n        // tag\n        this.deviceList.find((item) => {\n          if (item.id === deviceId) {\n            const ids = this.tags.map(idItem => idItem.id)\n            if (ids.indexOf(deviceId) < 0) {\n              this.tags.push({\n                name: `${item.username} : ${item.dname}`,\n                type: \"info\",\n                id: item.id\n              });\n            }\n          }\n        });\n      } else {\n        // this.getPageListBydid();\n        this.list = [];\n      }\n    },\n    // tag click\n    handleTagClick(tag, index) {\n      this.deviceId = tag.id;\n      this.getPageListBydid(tag.id);\n      this.selectTag = {\n        ...tag,\n        index\n      }\n    },\n    // tag close\n    handleClose(tag) {\n      if (tag.id === this.selectTag.id) {\n        this.deviceId = \"\"\n      }\n      this.tags.splice(this.tags.indexOf(tag), 1);\n    },\n    // 拷贝\n    handleCopy(row) {\n      this.copyObj = row;\n    },\n    handleCancelCopy() {\n      this.copyObj = {};\n    },\n    handleDoCopy(copyObj) {\n      productApi.copy(this.deviceId, copyObj).then((res) => {\n        this.copyObj = {};\n        this.getPageListBydid(this.deviceId);\n      });\n      // .catch((err) => {\n      // });\n    },\n    handleCopyedit(copyObj) {\n      this.handleDoCopy(copyObj);\n    },\n    // page change\n    handlePageChange() {\n      this.deviceId ? this.getPageListBydid(this.deviceId) : this.getList();\n    }\n  }\n};\n",null]}