{"remainingRequest":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\src\\components\\DatePickerRange\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\src\\components\\DatePickerRange\\index.vue","mtime":1609569561000},{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"DatePickerRange\",\n  props: {\n    type: {\n      type: String,\n      default: 'daterange'\n    },\n    rangeSeparator: {\n      type: String,\n      default: '至'\n    },\n    startPlaceholder: {\n      type: String,\n      default: '开始日期'\n    },\n    endPlaceholder: {\n      type: String,\n      default: '结束日期'\n    },\n    format: {\n      type: String,\n      default: 'yyyy-MM-dd'\n    },\n    align: {\n      type: String,\n      default: 'center'\n    },\n    pickerOptions: {\n      type: Object,\n      default() {\n        return {\n          shortcuts: [{\n            text: '最近一周',\n            onClick(picker) {\n              const end = new Date()\n              const start = new Date()\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n              picker.$emit('pick', [start, end])\n            }\n          }, {\n            text: '最近一个月',\n            onClick(picker) {\n              const end = new Date()\n              const start = new Date()\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\n              picker.$emit('pick', [start, end])\n            }\n          }, {\n            text: '最近三个月',\n            onClick(picker) {\n              const end = new Date()\n              const start = new Date()\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\n              picker.$emit('pick', [start, end])\n            }\n          }]\n        }\n      }\n    },\n    dateRange: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    startDate: {\n      type: Date,\n      default: null\n    },\n    endDate: {\n      type: Date,\n      default: null\n    }\n  },\n  data() {\n    return {\n      pickerRange: [],\n      startPicker: null,\n      endPicker: null\n    }\n  },\n  created() {\n\n  },\n  watch: {\n    dateRange() {\n      this.pickerRange = this.dateRange\n    },\n    startDate() {\n      this.startPicker = this.startDate\n    },\n    endDate() {\n      this.endPicker = this.endDate\n    }\n  },\n  methods: {\n    handleChange() {\n      if (this.pickerRange) {\n        this.startPicker = this.pickerRange[0];\n        this.endPicker = this.pickerRange[1];\n      } else {\n        this.startPicker = null\n        this.endPicker = null\n      }\n      this.$emit('update:dateRange', this.pickerRange)\n      this.$emit('update:startDate', this.startPicker)\n      this.$emit('update:endDate', this.endPicker)\n      this.$emit('change')\n    }\n\n  }\n}\n",null]}