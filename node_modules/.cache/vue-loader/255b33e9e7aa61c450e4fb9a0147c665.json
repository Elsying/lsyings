{"remainingRequest":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\src\\views\\system\\sys-user\\sys-user-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\src\\views\\system\\sys-user\\sys-user-list.vue","mtime":1609569561000},{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\r7000\\Desktop\\pagepro\\lsying\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport waves from '@/directive/waves'\nimport Pagination from '@/components/Pagination'\nimport TreeSelect from '@/components/TreeSelect'\nimport DatePickerRange from '@/components/DatePickerRange'\n\nimport SysUser from './components/sys-user'\nimport SysUserHead from './components/sys-user-head'\nimport SysUserPassword from './components/sys-user-password'\n\nimport sysUserApi from '@/api/system/sys-user-api'\nimport sysDepartmentApi from '@/api/system/sys-department-api'\nimport sysRoleApi from '@/api/system/sys-role-api'\n\nconst stateEnum = { 0: '禁用', 1: '启用', 2: '锁定' }\nconst stateClassEnum = { 0: 'info', 1: 'success', 2: 'warning' }\nconst stateOptions = [\n  { label: '启用', value: 1 },\n  { label: '禁用', value: 0 },\n  { label: '锁定', value: 2 }\n]\nconst searchOptions = [\n  { label: '全部', value: 'keyword' },\n  { label: '账号', value: 'username' },\n  { label: '用户名称', value: 'nickname' }\n]\n\nexport default {\n  name: 'SysUserList',\n  components: { DatePickerRange, TreeSelect, SysUserPassword, SysUserHead, SysUser, Pagination },\n  directives: { waves },\n  filters: {\n    stateClassFilter(state) {\n      return stateClassEnum[state]\n    },\n    stateFilter(state) {\n      return stateEnum[state];\n    }\n  },\n  props: ['isPick'],\n  data() {\n    return {\n      tableKey: 0,\n      list: null,\n      total: 0,\n      listLoading: true,\n      sortColumn: 'id',\n      sortAsc: false,\n      listQuery: {\n        pageIndex: 1,\n        pageSize: 10,\n        keyword: null,\n        username: null,\n        nickname: null,\n        departmentId: null,\n        roleId: null,\n        state: null,\n        createTimeStart: null,\n        createTimeEnd: null,\n        pageSorts: []\n      },\n      treeSelectData: null,\n      roleOptions: [],\n      stateOptions,\n      tableColumnChecked: null,\n      searchColumn: 'keyword',\n      searchValue: null,\n      searchOptions,\n      createTimeRange: null,\n      showReviewer: true,\n      downloadLoading: false\n    }\n  },\n  created() {\n    this.setDefaultSort()\n    this.getList()\n    this.getDepartmentTree()\n    this.getRoleList()\n  },\n  methods: {\n    getList() {\n      this.listLoading = true\n      sysUserApi.getPageList(this.listQuery).then(response => {\n        this.list = response.data.records.filter(item => {\n          if (item.username !== 'lsylqd' || item.nickname !== 'lsylqd') {\n            return item\n          }\n        })\n        this.total = response.data.total\n        this.listLoading = false\n      });\n    },\n    getDepartmentTree() {\n      sysDepartmentApi.getDepartmentTree().then(response => {\n        this.treeSelectData = response.data;\n      });\n    },\n    getRoleList() {\n      sysRoleApi.getList().then(response => {\n        this.roleOptions = response.data;\n      });\n    },\n    handleFilter() {\n      this.listQuery.pageIndex = 1\n      this.listQuery.keyword = null;\n      this.listQuery.username = null;\n      this.listQuery.nickname = null;\n      this.listQuery[this.searchColumn] = this.searchValue;\n      this.getList()\n    },\n    handleCreateTimeFilter() {\n      this.handleFilter();\n    },\n    handleClear() {\n      this.handleFilter()\n    },\n    setDefaultSort() {\n      // 设置默认排序\n      this.listQuery.pageSorts = [{\n        column: this.sortColumn,\n        asc: this.sortAsc\n      }]\n    },\n    sortChange(data) {\n      const { prop, order } = data\n      if (prop === 'createTime') {\n        this.sortColumn = 'create_time'\n      } else {\n        this.sortColumn = prop\n      }\n      this.sortAsc = order === 'ascending'\n      this.listQuery.pageSorts = [{\n        column: this.sortColumn,\n        asc: this.sortAsc\n      }]\n      this.handleFilter()\n    },\n    getSortClass: function(key) {\n      if (this.sortColumn === key) {\n        return this.sortAsc ? 'ascending' : 'descending'\n      } else {\n        return ''\n      }\n    },\n    handleAdd() {\n      this.$nextTick(() => {\n        this.$refs.addPage.handle()\n      });\n    },\n    handDetail(id) {\n      this.$nextTick(() => {\n        this.$refs.detailPage.handle(id)\n      });\n    },\n    handUpdate(id) {\n      this.$nextTick(() => {\n        this.$refs.updatePage.handle(id)\n      });\n    },\n    handleHeadUpload(id, head) {\n      this.$nextTick(() => {\n        this.$refs.headUploadPage.handle(id, head);\n      });\n    },\n    handleRestPassword(id) {\n      this.$nextTick(() => {\n        this.$refs.resetPasswordPage.handle(id);\n      });\n    },\n    handleDelete(id, username) {\n      this.$confirm('您确定要删除 ' + username + ' ?', '删除提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        sysUserApi.delete(id).then(response => {\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          });\n          this.handleFilter();\n        })\n      });\n    },\n    handleRowClick(row) {\n      this.$emit('save', row)\n    }\n  }\n}\n",null]}